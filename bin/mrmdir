#!/usr/bin/env node
// -*- mode: js -*-
/*
 * Copyright 2018 Joyent, Inc.
 */

var path = require('path');
var url = require('url');

var bunyan = require('bunyan');
var dashdash = require('dashdash');

var manta = require('../lib');


///--- Functions

function optionsParser(name) {
    var parser = dashdash.createParser({
        options: manta.DEFAULT_CLI_OPTIONS
    });

    return (parser);
}


function ifError(err) {
    if (err) {
        console.error('mrmdir: ' + err.toString());
        process.exit(1);
    }
}


function printEntry(obj) {
    console.log('%j', obj);
}


///--- Mainline

(function main() {
    var argTypes = ['mdir'];
    var name = path.basename(process.argv[1]);
    var log = bunyan.createLogger({
        name: name,
        level: (process.env.LOG_LEVEL || 'info'),
        stream: process.stderr
    });
    var parser = optionsParser(name);
    var parseArgs = {
        name: name,
        parser: parser,
        argTypes: argTypes,
        log: log
    };
    var options = manta.parseOptions(parseArgs);

    var client = manta.createBinClient(options);
    var i = -1;

    (function rmdir(cb_err) {
        ifError(cb_err);

        var p = options.paths[++i];
        if (!p) {
            client.close();
            return;
        }

        client.info(p, function (err, info) {
            if (err) {
                client.get(p, function (err2) {
                    ifError(err2);
                    // We *shouldn't* ever hit this...
                    ifError(err);
                });
                return;
            }

            if (info.extension !== 'directory') {
                console.error(p + ' is not a directory');
                process.exit(1);
            }

            client.unlink(p, function (err2) {
                ifError(err2);
                process.exit(0);
            });
        });
    })();
})();
